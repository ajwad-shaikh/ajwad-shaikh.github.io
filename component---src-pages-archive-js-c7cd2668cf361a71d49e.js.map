{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["colors","theme","fonts","fontSizes","StyledMainContainer","styled","Main","StyledTableContainer","div","media","tablet","StyledTable","table","transition","lightNavy","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","ArchivePage","location","projects","data","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","rel","href","className","length","map","node","frontmatter","date","github","external","android","behance","title","tech","company","unity","key","el","Date","getFullYear","item","target","aria-label","name"],"mappings":"mOAUQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,MAAOC,EAAcF,IAAdE,UAEjBC,EAAsBC,YAAOC,KAAV,mFAAGD,CAAH,MACnBE,EAAuBF,IAAOG,IAAV,oFAAGH,CAAH,4BAEtBI,IAAMC,OAFgB,yDAMpBC,EAAcN,IAAOO,MAAV,2EAAGP,CAAH,iiBAKXI,IAAMC,OALK,sDAWCT,IAAMY,WAIEb,EAAOc,UAQ3BL,IAAMC,OAvBK,sDAiCTD,IAAMC,OAjCG,0DAkCIP,EAAUY,IAKhBf,EAAOgB,cACHb,EAAUc,GAMVd,EAAUe,GAGVf,EAAUgB,GACRjB,EAAMkB,OAafC,IAAOC,YAqJJC,UAvIK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACfC,EADoC,EAAXC,KACTC,kBAAkBC,MAElCC,EAAcC,iBAAO,MACrBC,EAAcD,iBAAO,MACrBE,EAAiBF,iBAAO,IAO9B,OANAG,qBAAU,WACRC,IAAGC,OAAON,EAAYO,QAASC,sBAC/BH,IAAGC,OAAOJ,EAAYK,QAASC,sBAC/BL,EAAeI,QAAQE,SAAQ,SAACC,EAAKC,GAAN,OAAYN,IAAGC,OAAOI,EAAKF,mBAAa,GAAJG,SAClE,IAGD,kBAAC,IAAD,CAAQhB,SAAUA,GAChB,kBAAC,SAAD,KACE,yDACA,0BAAMiB,IAAI,YAAYC,KAAK,4CAG7B,kBAACtC,EAAD,KACE,4BAAQmC,IAAKV,GACX,wBAAIc,UAAU,aAAd,WACA,uBAAGA,UAAU,YAAb,wCAGF,kBAACpC,EAAD,CAAsBgC,IAAKR,GACzB,kBAACpB,EAAD,KACE,+BACE,4BACE,oCACA,qCACA,wBAAIgC,UAAU,kBAAd,WACA,wBAAIA,UAAU,kBAAd,cACA,sCAGJ,+BACGlB,EAASmB,OAAS,GACjBnB,EAASoB,KAAI,WAAWL,GAAO,IAC7B,EAD4B,EAAdM,KAWLC,YATPC,EADF,EACEA,KACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,QACAC,EANF,EAMEA,MACAC,EAPF,EAOEA,KACAC,EARF,EAQEA,QACAC,EATF,EASEA,MAEF,OACE,wBAAIC,IAAKjB,EAAGD,IAAK,SAAAmB,GAAE,OAAK1B,EAAeI,QAAQI,GAAKkB,IAClD,wBAAIf,UAAU,iBAAd,GAAkC,IAAIgB,KAAKX,GAAMY,eAEjD,wBAAIjB,UAAU,SAASU,GAEvB,wBAAIV,UAAU,0BACXY,EAAU,8BAAOA,GAAkB,oCAGtC,wBAAIZ,UAAU,uBACXW,EAAKV,OAAS,GACbU,EAAKT,KAAI,SAACgB,EAAMrB,GAAP,OACP,0BAAMiB,IAAKjB,GACRqB,EACA,GACArB,IAAMc,EAAKV,OAAS,GAAK,0BAAMD,UAAU,aAAhB,UAKlC,wBAAIA,UAAU,SACZ,8BACGO,GACC,uBACER,KAAMQ,EACNY,OAAO,SACPrB,IAAI,+BACJsB,aAAW,iBACX,kBAAC,IAAD,CAAeC,KAAK,cAGvBf,GACC,uBACEP,KAAMO,EACNa,OAAO,SACPrB,IAAI,+BACJsB,aAAW,eACX,kBAAC,IAAD,CAAeC,KAAK,YAGvBb,GACC,uBACET,KAAMS,EACNW,OAAO,SACPrB,IAAI,+BACJsB,aAAW,0BACX,kBAAC,IAAD,CAAeC,KAAK,eAGvBZ,GACC,uBACEV,KAAMU,EACNU,OAAO,SACPrB,IAAI,+BACJsB,aAAW,gBACX,kBAAC,IAAD,CAAeC,KAAK,aAGvBR,GACC,uBACEd,KAAMc,EACNM,OAAO,SACPrB,IAAI,+BACJsB,aAAW,mBACX,kBAAC,IAAD,CAAeC,KAAK","file":"component---src-pages-archive-js-c7cd2668cf361a71d49e.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport sr from '@utils/sr';\nimport { srConfig } from '@config';\nimport { Layout } from '@components';\nimport { FormattedIcon } from '@components/icons';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main } from '@styles';\nconst { colors, fonts, fontSizes } = theme;\n\nconst StyledMainContainer = styled(Main)``;\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  .hide-on-mobile {\n    ${media.tablet`\n      display: none;\n    `};\n  }\n\n  tbody tr {\n    transition: ${theme.transition};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.lightNavy};\n    }\n  }\n  th,\n  td {\n    cursor: default;\n    line-height: 1.5;\n    padding: 10px 20px;\n    ${media.tablet`\n      padding: 10px;\n    `};\n  }\n  th {\n    text-align: left;\n  }\n  td {\n    &.year {\n      width: 10%;\n      ${media.tablet`\n        font-size: ${fontSizes.sm};\n      `};\n    }\n    &.title {\n      padding-top: 15px;\n      color: ${colors.lightestSlate};\n      font-size: ${fontSizes.xl};\n      font-weight: 700;\n    }\n    &.company {\n      width: 15%;\n      padding-top: 15px;\n      font-size: ${fontSizes.lg};\n    }\n    &.tech {\n      font-size: ${fontSizes.xs};\n      font-family: ${fonts.SFMono};\n      .separator {\n        margin: 0 5px;\n      }\n      span {\n        display: inline-block;\n      }\n    }\n    &.links {\n      span {\n        display: flex;\n        align-items: center;\n        a {\n          ${mixins.flexCenter};\n        }\n        a + a {\n          margin-left: 10px;\n        }\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig());\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Archive | Ajwad Shaikh</title>\n        <link rel=\"canonical\" href=\"https://ajwad-shaikh.github.io/archive\" />\n      </Helmet>\n\n      <StyledMainContainer>\n        <header ref={revealTitle}>\n          <h1 className=\"big-title\">Archive</h1>\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made at</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const {\n                    date,\n                    github,\n                    external,\n                    android,\n                    behance,\n                    title,\n                    tech,\n                    company,\n                    unity,\n                  } = node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {''}\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <span>\n                          {external && (\n                            <a\n                              href={external}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"External Link\">\n                              <FormattedIcon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a\n                              href={github}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"GitHub Link\">\n                              <FormattedIcon name=\"GitHub\" />\n                            </a>\n                          )}\n                          {android && (\n                            <a\n                              href={android}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"Google Play Store Link\">\n                              <FormattedIcon name=\"PlayStore\" />\n                            </a>\n                          )}\n                          {behance && (\n                            <a\n                              href={behance}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"Behance Link\">\n                              <FormattedIcon name=\"Behance\" />\n                            </a>\n                          )}\n                          {unity && (\n                            <a\n                              href={unity}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"Unity Play Link\">\n                              <FormattedIcon name=\"Unity\" />\n                            </a>\n                          )}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </StyledTable>\n        </StyledTableContainer>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            android\n            company\n            behance\n            unity\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}